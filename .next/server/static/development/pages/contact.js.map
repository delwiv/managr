{"version":3,"file":"static/development/pages/contact.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/contact.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Link from 'next/link'\n\nconst API_URL = 'http://localhost:3038'\n\nconst fetchContact = async id => {\n  const data = await fetch(`${API_URL}/contacts/${id}`, { cors: true })\n  return data.json()\n}\n\nconst labelStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'stretch',\n}\n\nclass Contact extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    contact: PropTypes.object.isRequired,\n  }\n  static getInitialProps = async params => {\n    console.log({ params })\n    const contact = await fetchContact(params.query.contactId)\n    return { contact }\n  }\n  constructor(props) {\n    super(props)\n    this.state = { contact: props.contact }\n  }\n\n  handleChange = field => event => {\n    console.log({ [field]: event.target.value })\n  }\n\n  getDepartment = () => {\n    return this.state.contact.departement || '44 - Loire Atlantique'\n  }\n\n  render() {\n    const {\n      state: { contact },\n      handleChange,\n      getDepartment,\n    } = this\n\n    console.log({ contact })\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <h1>{contact.nom}</h1>\n        <p>\n          <strong>{contact.adresse}</strong>\n        </p>\n        <p>\n          <strong>\n            {contact.cp} {contact.ville}\n          </strong>\n        </p>\n        <div>\n          <form\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'center',\n              // alignItems: 'center',\n              width: '90%',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                flex: 1,\n              }}\n            >\n              <fieldset>\n                <legend>Adresse</legend>\n\n                <label style={labelStyle}>\n                  nom\n                  <input type=\"text\" name=\"nom\" value={contact.nom} onChange={handleChange('nom')} />\n                </label>\n                <label style={labelStyle}>\n                  adresse\n                  <input type=\"text\" name=\"adresse\" value={contact.adresse} onChange={handleChange('adresse')} />\n                </label>\n                <label style={labelStyle}>\n                  cp\n                  <input type=\"text\" name=\"cp\" value={contact.cp} onChange={handleChange('cp')} />\n                </label>\n                <label style={labelStyle}>\n                  departement\n                  <input\n                    type=\"text\"\n                    name=\"departement\"\n                    value={contact.departement}\n                    onChange={handleChange('departement')}\n                  />\n                </label>\n                <label style={labelStyle}>\n                  ville\n                  <input type=\"text\" name=\"ville\" value={contact.ville} onChange={handleChange('ville')} />\n                </label>\n              </fieldset>\n              <fieldset>\n                <legend>Infos</legend>\n                <label style={labelStyle}>\n                  cible\n                  <input type=\"text\" value={contact.cible} name=\"cible\" onChange={handleChange('cible')} />\n                </label>\n                <label style={labelStyle}>\n                  vu\n                  <input type=\"text\" value={contact.vu} name=\"vu\" onChange={handleChange('vu')} />\n                </label>\n                <label style={labelStyle}>\n                  date\n                  <input type=\"text\" value={contact.date} name=\"date\" onChange={handleChange('date')} />\n                </label>\n                <label style={labelStyle}>\n                  mois\n                  <input type=\"text\" value={contact.mois} name=\"mois\" onChange={handleChange('mois')} />\n                </label>\n              </fieldset>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                flex: 1,\n              }}\n            >\n              <fieldset>\n                <legend>Responsable</legend>\n                <label style={labelStyle}>\n                  Nom\n                  <input\n                    type=\"text\"\n                    value={contact.responsable}\n                    name=\"Nom_resp1\"\n                    onChange={handleChange('responsable1')}\n                  />\n                </label>\n                <label style={labelStyle}>\n                  Tel\n                  <input type=\"text\" value={contact.tel_pro} name=\"Tel_resp1\" onChange={handleChange('tel1')} />\n                </label>\n                <label style={labelStyle}>\n                  Mail\n                  <input type=\"text\" value={contact.mail} name=\"Mail_resp1\" onChange={handleChange('mail1')} />\n                </label>\n              </fieldset>\n              <fieldset>\n                <legend>Responsable 2</legend>\n                <label style={labelStyle}>\n                  Nom\n                  <input type=\"text\" name=\"Nom_resp2\" onChange={handleChange('responsable2')} />\n                </label>\n                <label style={labelStyle}>\n                  Tel\n                  <input type=\"text\" value={contact.tel_perso} name=\"Tel_resp2\" onChange={handleChange('tel2')} />\n                </label>\n                <label style={labelStyle}>\n                  Mail\n                  <input type=\"text\" name=\"Mail_resp2\" onChange={handleChange('mail2')} />\n                </label>\n              </fieldset>\n              <fieldset>\n                <legend>Responsable 3</legend>\n                <label style={labelStyle}>\n                  Nom\n                  <input type=\"text\" name=\"Nom_resp3\" onChange={handleChange('responsable3')} />\n                </label>\n                <label style={labelStyle}>\n                  Tel\n                  <input type=\"text\" name=\"Tel_resp3\" onChange={handleChange('tel3')} />\n                </label>\n                <label style={labelStyle}>\n                  Mail\n                  <input type=\"text\" name=\"Mail_resp3\" onChange={handleChange('mail3')} />\n                </label>\n              </fieldset>\n            </div>\n          </form>\n        </div>\n        <div\n          style={{\n            width: '50%',\n            alignSelf: 'center',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        />\n        {/*<Button variant=\"contained\" color=\"primary\">\n                  Do nothing button\n                </Button>*/}\n      </div>\n    )\n  }\n}\n\nexport default Contact\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");"],"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","sourceRoot":""}