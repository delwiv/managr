{"version":3,"file":"static/webpack/static/development/pages/index.js.e02019802eb0e2168e72.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport qs from 'querystring'\nimport Router from 'next/router'\nimport './list.css'\n// import VisibilitySensor from 'react-visibility-sensor'\n\nconst API_URL = 'http://localhost:3038'\n\nconst isClient = typeof window !== 'undefined'\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 20,\n  },\n})\n\nconst fetchContacts = async (params = {}) => {\n  if (!params.limit && params.limit !== 0) {\n    params.limit = 500\n  }\n  const data = await fetch(`${API_URL}/contacts?${qs.stringify(params)}`, { cors: true })\n  return data.json()\n}\n\nclass Index extends React.Component {\n  static async getInitialProps() {\n    const data = await fetchContacts()\n    return {\n      contacts: data,\n      loadingContacts: false,\n    }\n  }\n\n  state = { contacts: [] }\n\n  constructor(props) {\n    super(props)\n    this.state = { contacts: props.contacts }\n  }\n\n  componentDidMount() {\n    if (isClient) {\n      window.addEventListener('scroll', this.onScroll, false)\n    }\n  }\n\n  componentWillUnmount() {\n    if (isClient) {\n      window.removeEventListener('scroll', this.onScroll, false)\n    }\n  }\n\n  onScroll = () => {\n    if (this.lastCall && Date.now() < this.lastCall + 50) return\n    console.log('on scroll')\n    this.lastCall = Date.now()\n    if (\n      !this.state.loadingContacts &&\n      window.innerHeight + window.scrollY >= document.body.offsetHeight - 5000 &&\n      this.props.contacts.length\n    ) {\n      this.loadMore()\n    }\n  }\n\n  sendEmails = async () => {\n    const emails = Array.from(document.querySelectorAll('input[name=\"mass_mail\"]:checked')).map(i => i.value.trim())\n    console.log({ emails })\n    const result = await fetch('http://localhost:3003/mails', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ emails }),\n    })\n    console.log({ result })\n  }\n\n  loadMore = async () => {\n    this.setState({ loadingContacts: true })\n    const skip = this.state.contacts.length\n    console.log({ skip })\n    const contacts = await fetchContacts({ skip })\n    this.setState({\n      contacts: this.state.contacts.concat(contacts),\n      loadingContacts: false,\n    })\n  }\n\n  onClickContact = contactId => {\n    console.log({ contactId })\n    Router.push(`/contact?contactId=${contactId}`)\n  }\n\n  getRow = (contact, i) => (\n    <tr key={contact._id} className=\"row\" onClick={() => this.onClickContact(contact._id)}>\n      <td>{contact.departement}</td>\n      <td>{contact.ville}</td>\n      <td>{contact.nom}</td>\n      <td>{contact.responsable}</td>\n      <td>\n        <a href={`mailto:${contact.mail}?SUBJECT=Jazz`}>{contact.mail}</a>\n      </td>\n      <td>{contact.envoi_mail}</td>\n      <td>\n        <input type=\"checkbox\" value={contact.mail} name=\"mass_mail\" style={{ padding: 0 }} />\n      </td>\n      <td>{contact.mois_contact}</td>\n      <td>{contact.vu_le}</td>\n    </tr>\n  )\n\n  render() {\n    const {\n      state: { contacts },\n      getRow,\n    } = this\n\n    return (\n      <div style={{ paddingTop: 0 }}>\n        <table padding=\"dense\" className=\"list\">\n          <thead>\n            <tr>\n              <th>Département</th>\n              <th>Ville</th>\n              <th>Nom</th>\n              <th>Responsable</th>\n              <th>Mail</th>\n              <th>Mail Envoyé le</th>\n              <th>Mail de masse</th>\n              <th>Contact</th>\n              <th>Vu le</th>\n            </tr>\n          </thead>\n          <tbody>{contacts.map(getRow)}</tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nIndex.propTypes = {\n  contacts: PropTypes.Array,\n}\n\nexport default Index\n"],"mappings":"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","sourceRoot":""}